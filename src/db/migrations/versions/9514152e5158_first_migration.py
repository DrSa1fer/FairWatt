"""First migration

Revision ID: 9514152e5158
Revises: 
Create Date: 2025-05-24 08:16:46.816075

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9514152e5158'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("TripPoint", column_name="TripFacilityID", new_column_name="TripPointID")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Meter',
    sa.Column('MeterID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FacilityID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TariffID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ClientID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ClientID'], ['Client.ClientID'], name='Meter_ClientID_fkey'),
    sa.ForeignKeyConstraint(['TariffID'], ['Tariff.TariffID'], name='Meter_TariffID_fkey'),
    sa.PrimaryKeyConstraint('MeterID', name='Meter_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('MonthlyConsumption',
    sa.Column('MeterID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('Data', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MeterID'], ['Meter.MeterID'], name=op.f('MonthlyConsumption_MeterID_fkey')),
    sa.PrimaryKeyConstraint('MeterID', 'Date', name=op.f('MonthlyConsumption_pkey'))
    )
    op.create_table('TariffKind',
    sa.Column('TariffKindID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('TariffKindID', name='TariffKind_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('TripFacility',
    sa.Column('TripID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacilityID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TripFacilityID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['TripID'], ['Trip.TripID'], name=op.f('TripFacility_TripID_fkey')),
    sa.PrimaryKeyConstraint('TripFacilityID', name=op.f('TripFacility_pkey'))
    )
    op.create_table('Tariff',
    sa.Column('TariffKindID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TariffID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Standard', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('Price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['TariffKindID'], ['TariffKind.TariffKindID'], name='Tariff_TariffKindID_fkey'),
    sa.PrimaryKeyConstraint('TariffID', name='Tariff_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Verified',
    sa.Column('FacilityID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ClientID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('GradeID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TripID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('VerifiedID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ClientID'], ['Client.ClientID'], name=op.f('Verified_ClientID_fkey')),
    sa.ForeignKeyConstraint(['GradeID'], ['VerifiedGrade.VerifiedGradeID'], name=op.f('Verified_GradeID_fkey')),
    sa.ForeignKeyConstraint(['TripID'], ['Trip.TripID'], name=op.f('Verified_TripID_fkey')),
    sa.PrimaryKeyConstraint('VerifiedID', name=op.f('Verified_pkey'))
    )
    op.create_table('Trip',
    sa.Column('TripID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('FirstName', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('LastName', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('FromTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('ToTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('TripID', name='Trip_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Facility',
    sa.Column('FacilityKindID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacilityID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Rooms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Residents', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Square', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.CHAR(length=150), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['FacilityKindID'], ['FacilityKind.FacilityKindID'], name=op.f('Facility_FacilityKindID_fkey')),
    sa.PrimaryKeyConstraint('FacilityID', name=op.f('Facility_pkey'))
    )
    op.create_table('TripPoint',
    sa.Column('TripID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FacilityID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('TripFacilityID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('IsFirst', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['TripID'], ['Trip.TripID'], name=op.f('TripPoint_TripID_fkey')),
    sa.PrimaryKeyConstraint('TripFacilityID', name=op.f('TripPoint_pkey'))
    )
    op.create_table('SettlementKind',
    sa.Column('SettlementKindID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('SettlementKindID', name=op.f('SettlementKind_pkey'))
    )
    op.create_table('Employee',
    sa.Column('EmployeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('LastName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('FirstName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('FatherName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('EmployeeID', name=op.f('Employee_pkey'))
    )
    op.create_table('DailyConsumption',
    sa.Column('MeterID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('Data', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MeterID'], ['Meter.MeterID'], name=op.f('DailyConsumption_MeterID_fkey')),
    sa.PrimaryKeyConstraint('MeterID', 'Date', name=op.f('DailyConsumption_pkey'))
    )
    op.create_table('VerifiedGrade',
    sa.Column('VerifiedGradeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('VerifiedGradeID', name=op.f('VerifiedGrade_pkey'))
    )
    op.create_table('FacilityKind',
    sa.Column('FacilityKindID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('FacilityKindID', name=op.f('FacilityKind_pkey'))
    )
    op.create_table('Client',
    sa.Column('ClientID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('LastName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('FirstName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('FatherName', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('Rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('Email', sa.CHAR(length=35), autoincrement=False, nullable=True),
    sa.Column('Phone', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ClientID', name=op.f('Client_pkey')),
    sa.UniqueConstraint('Email', name=op.f('Client_Email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('Phone', name=op.f('Client_Phone_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
